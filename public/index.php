<?php

/*
請依據建置邏輯，選擇跳轉專案，由於節點正常來說沒有很多，因此簡單寫就好了

主目錄下的hahaha，則設計為切換模式
例如維護時導過去，或者提供全局功能

// 因為master是laravel，他本身很慢，所以不需要額外判斷，幫助request加速
// 我只須確保API在比較前面可以優先請求

// 如用我框架，在此分專案設計下，則可能設計為在API加header，分離API和網站

因為設計上，架站可以任意搭配，所以設定分別私自紀錄相同設定，因為採用集中表會使的，專案無法獨立運作
所以我會開一個資料夾，儲存共用變數，只需要改好複製到各專案(也可以用腳本複製)，通用設定採用class儲存，
用腳本複製完會順便執行composer autoload
*/

/*
路由命名

基本上這些子專案可以merge成一個專案(手動搬，可以看到我後台backend是放在子資料夾backend，而不是直接放在root)，因此是依照這個設計當作核心架構規劃
保留字為
/
/backend
/api
/fast_api
...etc(下面那些跳轉)

基本上backend的api寫在/api專案裡
backend/api是屬於後台內部用的api才寫在這

其他屬附加專案或架構，沒規定的可以隨便取，但碰到核心架構的請另外命名，而不是要求核心架構用其他名稱)
 ----------------------------------------------------------- 
架構設計主要是for User，而不是專案分工誰比較大用關鍵字，通常關鍵字由負責的人決定，也由他負責(因為他要求這樣做的)
 ----------------------------------------------------------- 
*/

// 因為這是入口，直接require即可，有需要再包成檔案載入
// ----------------------------------------------------------- 
require __DIR__.'/../libraries/hahahasublib/trait/hahaha_instance_trait.php';
// ----------------------------------------------------------- 
require __DIR__.'/../env/system_setting/env.php';
require __DIR__.'/../env/option/env.php';
// ----------------------------------------------------------- 
require __DIR__.'/../config/system_setting/hahaha_system_setting.php';
require __DIR__.'/../config/option/hahaha_option.php';
require __DIR__.'/../config/global/hahaha_global.php';
// ----------------------------------------------------------- 

$system_setting_ = \pub\hahaha_system_setting::Instance()->Initial("hahaha", 0);
$global_ = \pub\hahaha_global::Instance();

$url_token_ = explode("?", $_SERVER['REQUEST_URI']);






// ------------------------------------------------------------------------------ 
// 因為備份站有用到GPL的東西，所以這個應該也算是GPL感染的檔案
// ------------------------------------------------------------------------------ 

// --------------------------------------------- 
// 這裡只是簡單路由器，不要使用子專案內的東西
// --------------------------------------------- 

// ------------------------------------------------------------------------------ 
// 因為這裡是使用cookie，有需要再做成模組
// 目前只有 maintain
// ------------------------------------------------------------------------------ 
// // --------------------------------------------- 
// 不用這個
// // --------------------------------------------- 
// if(!defined("SESSION_START") ) {
//     define("SESSION_START", true); 
//     session_cache_expire(env::SESSION_EXPIRE_TIME); //session逾時設定;
//     session_start();
// }
// // --------------------------------------------- 

// --------------------------------------------- 
// 因為session可能會做不同設定
// ex. session_cache_expire 
// 所以到子專案才啟用，不一定要開啟，雖然目前都有用
// --------------------------------------------- 
if(isset($_GET['maintain'])) {
    if($_GET['maintain'] == "true") {
        setcookie("maintain", "true", time() + 60 * 60); 
        // $_COOKIE['maintain'] = true;
        echo "維護可進入";
    } else {
        setcookie("maintain", "false", time()); 
        // $_COOKIE['maintain'] = false;
        echo "維護不可進入";
    }
    return;
} 


if(!isset($_COOKIE['maintain'])) {
    if(env::MAINTAIN) {
        echo "維護中";
        exit;
    }
} else {
    if($_COOKIE['maintain'] == "true") {        
    } else {
        echo "維護中";
        exit;
    }
}
// ------------------------------------------------------------------------------ 







// ------------------------------------------------------------------------------ 
// 專案
// ------------------------------------------------------------------------------ 
// 主要 
// ------------------------------------------ 
// 跳轉專案
$global_->Project->Jump = 1;
// 比對站點
if(strpos($url_token_[0], $system_setting_->Project->Hahaha->Node) === 0)
{
    // api(H) - 快速API
    $global_->Node->Name = "Hahaha";
    require $system_setting_->Project->Hahaha->Index;
}
else if(strpos($url_token_[0], $system_setting_->Project->Api->Node) === 0)
{
    // api - 提供API
    $global_->Node->Name = "Api";
    require $system_setting_->Project->Api->Index;
}
else if(strpos($url_token_[0], $system_setting_->Project->Backend->Node) === 0)
{
    // 後台 - 單表式後台
    $global_->Node->Name = "Backend";
    require $system_setting_->Project->Backend->Index;
}
else if(strpos($url_token_[0], $system_setting_->Project->Master->Node) === 0)
{
    // 主控台 - 系統操作及後門
    $global_->Node->Name = "Master";
    require $system_setting_->Project->Master->Index;
}
// ---------------------- 
// GPL laravel backup - 如有使用，請遵照 GPL License 處理
// ---------------------- 
// else if(strpos($url_token_[0], $system_setting_->Project->Backup->Node) === 0) 
// { 
//     // 備份功能 - GPL 
//     $global_->Node->Name = "Backup"; 
//     require $system_setting_->Project->Backup->Index; 
// } 
// ---------------------- 
else
{
    // 前台 - 網站
    $global_->Node->Name = "Front";
    require $system_setting_->Project->Front->Index;
}

// ------------------------------------------ 
// 次要 
// ------------------------------------------ 

// ------------------------------------------------------------------------------ 
//  
// ------------------------------------------------------------------------------ 

// ------------------------------------------------------------------------------ 
//  
// ------------------------------------------------------------------------------ 
// 
// ------------------------------------------------------------------------------ 

// ------------------------------------------------------------------------------ 
// 注意 
// ------------------------------------------------------------------------------ 
// 此架構採多Port跳轉 & 使用iframe設計，建置而成
// ------------------------------------------------------------------------------ 

// ------------------------------------------------------------------------------ 
// 注意 
// ------------------------------------------------------------------------------ 
// 有License問題的(ex. GPL)，請另外獨立專案隔離
// ------------------------------------------------------------------------------ 


