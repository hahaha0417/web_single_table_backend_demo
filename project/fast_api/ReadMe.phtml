<?php

// 上色需要，所以取這個檔名，有空會改成html文件

/*
// --------------------------------------------------------------------------
架構規劃
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
*/
原則上主流程限制以reference為主，因為這樣寫比較快
在Controller以後，處理array可以用copy的(其實會變慢)

如果我想要在PHP深耕，則我會希望整個專案可以用reference就用reference
由於我人生規劃應該會放在C++那塊，因此我框架的規定則是上面那樣(因為reference很容易出問題，要求其他人可能其他人不會處理)

總之大概意思是 : 
框架主流程原則上以reference為主
而controller後，因為是局部的影響，並且不一定是核心的人寫，因此寫慢一點其實是沒差的

/*
// --------------------------------------------------------------------------
效能議題
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
*/
經測試發現，本框架簡單套版如果走原生PHP，
壓在3 ~ 5ms應該是沒問題(用MySQLi or PDO Query)

看起來差異還是在composer套件不是用reference做，string or array assign用copy的，會多不少損耗(如果目標單位為微秒則差很多，為毫秒其實是OK的)

/*
// --------------------------------------------------------------------------
架構撰寫限制
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
*/
在Controller前的代碼主要用reference做(除非接口設計需要)，採PHP原生reference作法，不使用composer
在Controller後的代碼則隨便，可以使用composer
但是要提醒，其實用reference可以再減少不少時間(如果你希望流程壓在5 ~ 10 ms，目標微秒時，串接字串處理或複製記憶體是很有影響的)

/*
// --------------------------------------------------------------------------
framework
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
*/
framework - hahaha framework

/*
// --------------------------------------------------------------------------
app
// --------------------------------------------------------------------------
主要修改區域
// --------------------------------------------------------------------------
*/
 -- kernel --
1. define - 定義
 -- main --
1. models - MVC Model
2. views - MVC View 
3. controllers - MVC Controller 
4. routes - 路由
5. apis - API接口
-- sub --
1. console - 主控台
2. commads - 命令
3. services - 服務
4. schedules - 排程
4. tools - 工具
-- other --
1. languages - 語言檔


/*
// --------------------------------------------------------------------------
bootstrap
// --------------------------------------------------------------------------
初始化流程
// --------------------------------------------------------------------------
*/

/*
// --------------------------------------------------------------------------
config
// --------------------------------------------------------------------------
設定檔
// --------------------------------------------------------------------------
*/
1. system_setting
2. option
3. global

/*
// --------------------------------------------------------------------------
flow
// --------------------------------------------------------------------------
階段式流程
// --------------------------------------------------------------------------
*/

/*
// --------------------------------------------------------------------------
libraries
// --------------------------------------------------------------------------
函式庫管理
// --------------------------------------------------------------------------
*/
1. hahahalib

/*
// --------------------------------------------------------------------------
logs
// --------------------------------------------------------------------------
記錄檔
// --------------------------------------------------------------------------
*/

/*
// --------------------------------------------------------------------------
resources
// --------------------------------------------------------------------------
資源檔
// --------------------------------------------------------------------------
*/

/*
// --------------------------------------------------------------------------
storage
// --------------------------------------------------------------------------
硬碟儲存
// --------------------------------------------------------------------------
*/

/*
// --------------------------------------------------------------------------
table
// --------------------------------------------------------------------------
各種使用表
// --------------------------------------------------------------------------
*/

/*
// --------------------------------------------------------------------------
temp
// --------------------------------------------------------------------------
暫存檔
// --------------------------------------------------------------------------
*/

/*
// --------------------------------------------------------------------------
vendor
// --------------------------------------------------------------------------
composer目錄
// --------------------------------------------------------------------------
*/